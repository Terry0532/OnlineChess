{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/terry/UUBC/React/Chess/src/components/game.js\";\n\n/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport '../index.css';\nimport Board from './board.js';\nimport FallenSoldierBlock from './fallensoldiers';\nimport initialiseChessBoard from '../helpers/initialiseChessBoard';\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      status: '',\n      turn: 'white',\n      lastTurn: undefined,\n      lastTurnPawnPosition: undefined,\n      firstMove: undefined\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice(); // const squares = this.state.squares;\n\n    if (this.state.sourceSelection === -1) {\n      if (!squares[i] || squares[i].player !== this.state.player) {\n        this.setState({\n          status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\"\n        }); // squares[i] ? delete squares[i].style.backgroundColor : null;\n\n        squares[i] ? squares[i].style = { ...squares[i].style,\n          backgroundColor: \"\"\n        } : null;\n      } else {\n        squares[i].style = { ...squares[i].style,\n          backgroundColor: \"RGB(111,143,114)\"\n        }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n        // const highLightMoves = squares[i].possibleMoves(i, squares);\n        // for (let index = 0; index < highLightMoves.length; index++) {\n        //     const element = highLightMoves[index];\n        //     squares.splice(element, 1, { style: { backgroundColor: \"RGB(111,143,114\" } });\n        // }\n        // console.log(squares);\n\n        this.setState({\n          status: \"Choose destination for the selected piece\",\n          sourceSelection: i\n        });\n      }\n    } else if (this.state.sourceSelection > -1) {\n      squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style,\n        backgroundColor: \"\"\n      };\n\n      if (squares[i] && squares[i].player === this.state.player) {\n        // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n        this.setState({\n          status: \"Wrong selection. Choose valid source and destination again.\",\n          sourceSelection: -1\n        });\n      } else {\n        const squares = this.state.squares.slice();\n        const whiteFallenSoldiers = this.state.whiteFallenSoldiers.slice();\n        const blackFallenSoldiers = this.state.blackFallenSoldiers.slice();\n\n        if (squares[this.state.sourceSelection].name === \"Pawn\") {\n          let enpassant;\n\n          if (this.state.sourceSelection - 1 === this.state.lastTurnPawnPosition || this.state.sourceSelection + 1 === this.state.lastTurnPawnPosition) {\n            if (this.state.firstMove) {\n              enpassant = true;\n            }\n          }\n\n          const isDestEnemyOccupied = squares[i] ? true : false;\n          const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied, enpassant, this.state.lastTurnPawnPosition);\n          const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n          const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n          if (isMovePossible && isMoveLegal) {\n            if (enpassant && squares[i] == null && (this.state.lastTurnPawnPosition - 8 === i || this.state.lastTurnPawnPosition + 8 === i)) {\n              console.log(\"enpassant\");\n\n              if (squares[this.state.lastTurnPawnPosition].player === 1) {\n                whiteFallenSoldiers.push(squares[this.state.lastTurnPawnPosition]);\n              } else {\n                blackFallenSoldiers.push(squares[this.state.lastTurnPawnPosition]);\n              }\n\n              let lastTurn = this.state.turn !== 'white' ? 'black' : 'white';\n              let firstMove;\n\n              if (squares[this.state.sourceSelection].name === \"Pawn\") {\n                if (squares[this.state.sourceSelection].player === 1 && i === this.state.sourceSelection - 16) {\n                  firstMove = true;\n                } else if (squares[this.state.sourceSelection].player === 2 && i === this.state.sourceSelection + 16) {\n                  firstMove = true;\n                }\n              }\n\n              let lastTurnPawnPosition = i;\n              squares[i] = squares[this.state.sourceSelection];\n              squares[this.state.sourceSelection] = null;\n              let player = this.state.player === 1 ? 2 : 1;\n              let turn = this.state.turn === 'white' ? 'black' : 'white';\n              this.setState({\n                sourceSelection: -1,\n                squares: squares,\n                whiteFallenSoldiers: whiteFallenSoldiers,\n                blackFallenSoldiers: blackFallenSoldiers,\n                player: player,\n                status: '',\n                turn: turn,\n                lastTurn: lastTurn,\n                firstMove: firstMove,\n                lastTurnPawnPosition: lastTurnPawnPosition\n              });\n            } else {\n              if (squares[i] !== null) {\n                if (squares[i].player === 1) {\n                  whiteFallenSoldiers.push(squares[i]);\n                } else {\n                  blackFallenSoldiers.push(squares[i]);\n                }\n              } // console.log(\"whiteFallenSoldiers\", whiteFallenSoldiers);\n              // console.log(\"blackFallenSoldiers\", blackFallenSoldiers);\n\n\n              let lastTurn = this.state.turn !== 'white' ? 'black' : 'white';\n              let firstMove;\n\n              if (squares[this.state.sourceSelection].name === \"Pawn\") {\n                if (squares[this.state.sourceSelection].player === 1 && i === this.state.sourceSelection - 16) {\n                  firstMove = true;\n                } else if (squares[this.state.sourceSelection].player === 2 && i === this.state.sourceSelection + 16) {\n                  firstMove = true;\n                }\n              }\n\n              let lastTurnPawnPosition = i;\n              squares[i] = squares[this.state.sourceSelection];\n              squares[this.state.sourceSelection] = null;\n              let player = this.state.player === 1 ? 2 : 1;\n              let turn = this.state.turn === 'white' ? 'black' : 'white';\n              this.setState({\n                sourceSelection: -1,\n                squares: squares,\n                whiteFallenSoldiers: whiteFallenSoldiers,\n                blackFallenSoldiers: blackFallenSoldiers,\n                player: player,\n                status: '',\n                turn: turn,\n                lastTurn: lastTurn,\n                firstMove: firstMove,\n                lastTurnPawnPosition: lastTurnPawnPosition\n              });\n            }\n          } else {\n            // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n            this.setState({\n              status: \"Wrong selection. Choose valid source and destination again.\",\n              sourceSelection: -1\n            });\n          }\n        } else {\n          const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i);\n          const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n          const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n          if (isMovePossible && isMoveLegal) {\n            if (squares[i] !== null) {\n              if (squares[i].player === 1) {\n                whiteFallenSoldiers.push(squares[i]);\n              } else {\n                blackFallenSoldiers.push(squares[i]);\n              }\n            } // console.log(\"whiteFallenSoldiers\", whiteFallenSoldiers);\n            // console.log(\"blackFallenSoldiers\", blackFallenSoldiers);\n\n\n            squares[i] = squares[this.state.sourceSelection];\n            squares[this.state.sourceSelection] = null;\n            let player = this.state.player === 1 ? 2 : 1;\n            let turn = this.state.turn === 'white' ? 'black' : 'white';\n            this.setState({\n              sourceSelection: -1,\n              squares: squares,\n              whiteFallenSoldiers: whiteFallenSoldiers,\n              blackFallenSoldiers: blackFallenSoldiers,\n              player: player,\n              status: '',\n              turn: turn\n            });\n          } else {\n            // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n            this.setState({\n              status: \"Wrong selection. Choose valid source and destination again.\",\n              sourceSelection: -1\n            });\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\n   * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\n   * @return {Boolean}               \n   */\n\n\n  isMoveLegal(srcToDestPath) {\n    let isLegal = true;\n\n    for (let i = 0; i < srcToDestPath.length; i++) {\n      if (this.state.squares[srcToDestPath[i]] !== null) {\n        isLegal = false;\n      }\n    }\n\n    return isLegal;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            squares: this.state.squares,\n            onClick: i => this.handleClick(i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Turn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"player-turn-box\",\n            style: {\n              backgroundColor: this.state.turn\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fallen-soldier-block\",\n            children: /*#__PURE__*/_jsxDEV(FallenSoldierBlock, {\n              whiteFallenSoldiers: this.state.whiteFallenSoldiers,\n              blackFallenSoldiers: this.state.blackFallenSoldiers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons-attribution\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" Chess Icons And Favicon (extracted) By en:User:Cburnett [\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://www.gnu.org/copyleft/fdl.html\",\n              children: \"GFDL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 92\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://creativecommons.org/licenses/by-sa/3.0/\",\n              children: \"CC-BY-SA-3.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 149\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://opensource.org/licenses/bsd-license.php\",\n              children: \"BSD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 224\n            }, this), \" or \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://www.gnu.org/licenses/gpl.html\",\n              children: \"GPL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 292\n            }, this), \"], \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\",\n              children: \"via Wikimedia Commons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 349\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/terry/UUBC/React/Chess/src/components/game.js"],"names":["React","Board","FallenSoldierBlock","initialiseChessBoard","Game","Component","constructor","state","squares","whiteFallenSoldiers","blackFallenSoldiers","player","sourceSelection","status","turn","lastTurn","undefined","lastTurnPawnPosition","firstMove","handleClick","i","slice","setState","style","backgroundColor","name","enpassant","isDestEnemyOccupied","isMovePossible","srcToDestPath","getSrcToDestPath","isMoveLegal","console","log","push","isLegal","length","render"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport '../index.css';\nimport Board from './board.js';\nimport FallenSoldierBlock from './fallensoldiers';\nimport initialiseChessBoard from '../helpers/initialiseChessBoard';\n\nexport default class Game extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            squares: initialiseChessBoard(),\n            whiteFallenSoldiers: [],\n            blackFallenSoldiers: [],\n            player: 1,\n            sourceSelection: -1,\n            status: '',\n            turn: 'white',\n            lastTurn: undefined,\n            lastTurnPawnPosition: undefined,\n            firstMove: undefined\n        }\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        // const squares = this.state.squares;\n\n        if (this.state.sourceSelection === -1) {\n            if (!squares[i] || squares[i].player !== this.state.player) {\n                this.setState({ status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\" });\n                // squares[i] ? delete squares[i].style.backgroundColor : null;\n                squares[i] ? squares[i].style = { ...squares[i].style, backgroundColor: \"\" } : null;\n            }\n            else {\n                squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n\n                // const highLightMoves = squares[i].possibleMoves(i, squares);\n                // for (let index = 0; index < highLightMoves.length; index++) {\n                //     const element = highLightMoves[index];\n                //     squares.splice(element, 1, { style: { backgroundColor: \"RGB(111,143,114\" } });\n                // }\n                // console.log(squares);\n\n                this.setState({\n                    status: \"Choose destination for the selected piece\",\n                    sourceSelection: i\n                });\n            }\n        }\n\n        else if (this.state.sourceSelection > -1) {\n            squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n\n            if (squares[i] && squares[i].player === this.state.player) {\n                // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n                this.setState({\n                    status: \"Wrong selection. Choose valid source and destination again.\",\n                    sourceSelection: -1,\n                });\n            }\n            else {\n                const squares = this.state.squares.slice();\n\n                const whiteFallenSoldiers = this.state.whiteFallenSoldiers.slice();\n                const blackFallenSoldiers = this.state.blackFallenSoldiers.slice();\n\n                if (squares[this.state.sourceSelection].name === \"Pawn\") {\n\n                    let enpassant;\n                    if (this.state.sourceSelection - 1 === this.state.lastTurnPawnPosition || this.state.sourceSelection + 1 === this.state.lastTurnPawnPosition) {\n                        if (this.state.firstMove) {\n                            enpassant = true;\n                        }\n                    }\n\n                    const isDestEnemyOccupied = squares[i] ? true : false;\n                    const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied, enpassant, this.state.lastTurnPawnPosition);\n                    const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n                    const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n                    if (isMovePossible && isMoveLegal) {\n                        if (enpassant && squares[i] == null && (this.state.lastTurnPawnPosition - 8 === i || this.state.lastTurnPawnPosition + 8 === i)) {\n                            console.log(\"enpassant\")\n                            if (squares[this.state.lastTurnPawnPosition].player === 1) {\n                                whiteFallenSoldiers.push(squares[this.state.lastTurnPawnPosition]);\n                            }\n                            else {\n                                blackFallenSoldiers.push(squares[this.state.lastTurnPawnPosition]);\n                            }\n                            let lastTurn = this.state.turn !== 'white' ? 'black' : 'white';\n                            let firstMove;\n                            if (squares[this.state.sourceSelection].name === \"Pawn\") {\n                                if (squares[this.state.sourceSelection].player === 1 && i === this.state.sourceSelection - 16) {\n                                    firstMove = true;\n                                } else if (squares[this.state.sourceSelection].player === 2 && i === this.state.sourceSelection + 16) {\n                                    firstMove = true;\n                                }\n                            }\n                            let lastTurnPawnPosition = i;\n\n                            squares[i] = squares[this.state.sourceSelection];\n                            squares[this.state.sourceSelection] = null;\n                            let player = this.state.player === 1 ? 2 : 1;\n                            let turn = this.state.turn === 'white' ? 'black' : 'white';\n\n                            this.setState({\n                                sourceSelection: -1,\n                                squares: squares,\n                                whiteFallenSoldiers: whiteFallenSoldiers,\n                                blackFallenSoldiers: blackFallenSoldiers,\n                                player: player,\n                                status: '',\n                                turn: turn,\n                                lastTurn: lastTurn,\n                                firstMove: firstMove,\n                                lastTurnPawnPosition: lastTurnPawnPosition\n                            });\n                        } else {\n                            if (squares[i] !== null) {\n                                if (squares[i].player === 1) {\n                                    whiteFallenSoldiers.push(squares[i]);\n                                }\n                                else {\n                                    blackFallenSoldiers.push(squares[i]);\n                                }\n                            }\n                            // console.log(\"whiteFallenSoldiers\", whiteFallenSoldiers);\n                            // console.log(\"blackFallenSoldiers\", blackFallenSoldiers);\n\n                            let lastTurn = this.state.turn !== 'white' ? 'black' : 'white';\n                            let firstMove;\n                            if (squares[this.state.sourceSelection].name === \"Pawn\") {\n                                if (squares[this.state.sourceSelection].player === 1 && i === this.state.sourceSelection - 16) {\n                                    firstMove = true;\n                                } else if (squares[this.state.sourceSelection].player === 2 && i === this.state.sourceSelection + 16) {\n                                    firstMove = true;\n                                }\n                            }\n                            let lastTurnPawnPosition = i;\n\n                            squares[i] = squares[this.state.sourceSelection];\n                            squares[this.state.sourceSelection] = null;\n                            let player = this.state.player === 1 ? 2 : 1;\n                            let turn = this.state.turn === 'white' ? 'black' : 'white';\n\n                            this.setState({\n                                sourceSelection: -1,\n                                squares: squares,\n                                whiteFallenSoldiers: whiteFallenSoldiers,\n                                blackFallenSoldiers: blackFallenSoldiers,\n                                player: player,\n                                status: '',\n                                turn: turn,\n                                lastTurn: lastTurn,\n                                firstMove: firstMove,\n                                lastTurnPawnPosition: lastTurnPawnPosition\n                            });\n                        }\n                    }\n                    else {\n                        // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n                        this.setState({\n                            status: \"Wrong selection. Choose valid source and destination again.\",\n                            sourceSelection: -1,\n                        });\n                    }\n                } else {\n                    const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i);\n                    const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n                    const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n                    if (isMovePossible && isMoveLegal) {\n                        if (squares[i] !== null) {\n                            if (squares[i].player === 1) {\n                                whiteFallenSoldiers.push(squares[i]);\n                            }\n                            else {\n                                blackFallenSoldiers.push(squares[i]);\n                            }\n                        }\n                        // console.log(\"whiteFallenSoldiers\", whiteFallenSoldiers);\n                        // console.log(\"blackFallenSoldiers\", blackFallenSoldiers);\n\n                        squares[i] = squares[this.state.sourceSelection];\n                        squares[this.state.sourceSelection] = null;\n                        let player = this.state.player === 1 ? 2 : 1;\n                        let turn = this.state.turn === 'white' ? 'black' : 'white';\n\n\n                        this.setState({\n                            sourceSelection: -1,\n                            squares: squares,\n                            whiteFallenSoldiers: whiteFallenSoldiers,\n                            blackFallenSoldiers: blackFallenSoldiers,\n                            player: player,\n                            status: '',\n                            turn: turn\n                        });\n                    }\n                    else {\n                        // squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n                        this.setState({\n                            status: \"Wrong selection. Choose valid source and destination again.\",\n                            sourceSelection: -1,\n                        });\n                    }\n                }\n\n            }\n        }\n\n    }\n\n    /**\n     * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\n     * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\n     * @return {Boolean}               \n     */\n    isMoveLegal(srcToDestPath) {\n        let isLegal = true;\n        for (let i = 0; i < srcToDestPath.length; i++) {\n            if (this.state.squares[srcToDestPath[i]] !== null) {\n                isLegal = false;\n            }\n        }\n        return isLegal;\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board\n                            squares={this.state.squares}\n                            onClick={(i) => this.handleClick(i)}\n                        />\n                    </div>\n                    <div className=\"game-info\">\n                        <h3>Turn</h3>\n                        <div id=\"player-turn-box\" style={{ backgroundColor: this.state.turn }}>\n\n                        </div>\n                        <div className=\"game-status\">{this.state.status}</div>\n\n                        <div className=\"fallen-soldier-block\">\n\n                            {<FallenSoldierBlock\n                                whiteFallenSoldiers={this.state.whiteFallenSoldiers}\n                                blackFallenSoldiers={this.state.blackFallenSoldiers}\n                            />\n                            }\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"icons-attribution\">\n                    <div> <small> Chess Icons And Favicon (extracted) By en:User:Cburnett [<a href=\"http://www.gnu.org/copyleft/fdl.html\">GFDL</a>, <a href=\"http://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA-3.0</a>, <a href=\"http://opensource.org/licenses/bsd-license.php\">BSD</a> or <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a>], <a href=\"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\">via Wikimedia Commons</a> </small></div>\n                </div>\n            </div>\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}