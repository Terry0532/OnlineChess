{"ast":null,"code":"import Piece from './piece.js';\nexport default class Pawn extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\");\n    this.initialPositions = {\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\n    };\n  }\n\n  isMovePossible(src, dest, isDestEnemyOccupied) {\n    if (this.player === 1) {\n      if (dest === src - 8 && !isDestEnemyOccupied || dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1) {\n        return true;\n      } else if (isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)) {\n        return true;\n      }\n    } else if (this.player === 2) {\n      if (dest === src + 8 && !isDestEnemyOccupied || dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1) {\n        return true;\n      } else if (isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */\n\n\n  getSrcToDestPath(src, dest) {\n    if (dest === src - 16) {\n      return [src - 8];\n    } else if (dest === src + 16) {\n      return [src + 8];\n    }\n\n    return [];\n  }\n\n}","map":{"version":3,"sources":["/Users/terry/UUBC/React/Chess/src/pieces/pawn.js"],"names":["Piece","Pawn","constructor","player","initialPositions","isMovePossible","src","dest","isDestEnemyOccupied","indexOf","getSrcToDestPath"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAnB,CAAyB;AACpCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAe,qEAAf,GAAuF,qEAAtG;AACA,SAAKC,gBAAL,GAAwB;AACpB,SAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CADiB;AAEpB,SAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B;AAFiB,KAAxB;AAIH;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAYC,mBAAZ,EAAiC;AAE3C,QAAI,KAAKL,MAAL,KAAgB,CAApB,EAAuB;AACnB,UAAKI,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoB,CAACE,mBAAtB,IAA+CD,IAAI,KAAKD,GAAG,GAAG,EAAf,IAAqB,KAAKF,gBAAL,CAAsB,CAAtB,EAAyBK,OAAzB,CAAiCH,GAAjC,MAA0C,CAAC,CAAnH,EAAuH;AACnH,eAAO,IAAP;AACH,OAFD,MAGK,IAAIE,mBAAmB,KAAKD,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoBC,IAAI,KAAKD,GAAG,GAAG,CAAxC,CAAvB,EAAmE;AACpE,eAAO,IAAP;AACH;AACJ,KAPD,MAQK,IAAI,KAAKH,MAAL,KAAgB,CAApB,EAAuB;AACxB,UAAKI,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoB,CAACE,mBAAtB,IAA+CD,IAAI,KAAKD,GAAG,GAAG,EAAf,IAAqB,KAAKF,gBAAL,CAAsB,CAAtB,EAAyBK,OAAzB,CAAiCH,GAAjC,MAA0C,CAAC,CAAnH,EAAuH;AACnH,eAAO,IAAP;AACH,OAFD,MAGK,IAAIE,mBAAmB,KAAKD,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoBC,IAAI,KAAKD,GAAG,GAAG,CAAxC,CAAvB,EAAmE;AACpE,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACII,EAAAA,gBAAgB,CAACJ,GAAD,EAAMC,IAAN,EAAY;AACxB,QAAIA,IAAI,KAAKD,GAAG,GAAG,EAAnB,EAAuB;AACnB,aAAO,CAACA,GAAG,GAAG,CAAP,CAAP;AACH,KAFD,MAGK,IAAIC,IAAI,KAAKD,GAAG,GAAG,EAAnB,EAAuB;AACxB,aAAO,CAACA,GAAG,GAAG,CAAP,CAAP;AACH;;AACD,WAAO,EAAP;AACH;;AA5CmC","sourcesContent":["import Piece from './piece.js';\n\nexport default class Pawn extends Piece {\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\n        this.initialPositions = {\n            1: [48, 49, 50, 51, 52, 53, 54, 55],\n            2: [8, 9, 10, 11, 12, 13, 14, 15]\n        }\n    }\n\n    isMovePossible(src, dest, isDestEnemyOccupied) {\n\n        if (this.player === 1) {\n            if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1)) {\n                return true;\n            }\n            else if (isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)) {\n                return true;\n            }\n        }\n        else if (this.player === 2) {\n            if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1)) {\n                return true;\n            }\n            else if (isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * returns array of one if pawn moves two steps, else returns empty array  \n     * @param  {[type]} src  [description]\n     * @param  {[type]} dest [description]\n     * @return {[type]}      [description]\n     */\n    getSrcToDestPath(src, dest) {\n        if (dest === src - 16) {\n            return [src - 8];\n        }\n        else if (dest === src + 16) {\n            return [src + 8];\n        }\n        return [];\n    }\n}"]},"metadata":{},"sourceType":"module"}