{"ast":null,"code":"import Piece from './piece.js';\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\");\n  }\n\n  isMovePossible(src, dest) {\n    let mod = src % 8;\n    let diff = 8 - mod;\n    console.log(\"src: \", src);\n    console.log(\"dest: \", dest);\n    console.log(\"mod: \", mod);\n    console.log(\"diff: \", diff);\n    console.log(Math.abs(src - dest) % 8 === 0 || dest >= src - mod && dest < src + diff);\n    return Math.abs(src - dest) % 8 === 0 || dest >= src - mod && dest < src + diff;\n  }\n\n  possibleMoves() {\n    return [1, 2];\n  }\n\n  getSrcToDestPath(src, dest) {\n    let path = [],\n        pathStart,\n        pathEnd,\n        incrementBy;\n\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    } else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    } else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n\n    return path;\n  }\n\n}","map":{"version":3,"sources":["/Users/terry/UUBC/React/Chess/src/pieces/rook.js"],"names":["Piece","Rook","constructor","player","isMovePossible","src","dest","mod","diff","console","log","Math","abs","possibleMoves","getSrcToDestPath","path","pathStart","pathEnd","incrementBy","i","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAnB,CAAyB;AACpCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAe,qEAAf,GAAuF,qEAAtG;AACH;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAY;AACtB,QAAIC,GAAG,GAAGF,GAAG,GAAG,CAAhB;AACA,QAAIG,IAAI,GAAG,IAAID,GAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,GAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAaC,IAAI,CAACC,GAAL,CAASP,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAA7B,IAAmCA,IAAI,IAAKD,GAAG,GAAGE,GAAf,IAAuBD,IAAI,GAAID,GAAG,GAAGG,IAArF;AAEA,WAAQG,IAAI,CAACC,GAAL,CAASP,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAA7B,IAAmCA,IAAI,IAAKD,GAAG,GAAGE,GAAf,IAAuBD,IAAI,GAAID,GAAG,GAAGG,IAAhF;AACH;;AAEDK,EAAAA,aAAa,GAAG;AACZ,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;;AAEDC,EAAAA,gBAAgB,CAACT,GAAD,EAAMC,IAAN,EAAY;AACxB,QAAIS,IAAI,GAAG,EAAX;AAAA,QAAeC,SAAf;AAAA,QAA0BC,OAA1B;AAAA,QAAmCC,WAAnC;;AACA,QAAIb,GAAG,GAAGC,IAAV,EAAgB;AACZU,MAAAA,SAAS,GAAGV,IAAZ;AACAW,MAAAA,OAAO,GAAGZ,GAAV;AACH,KAHD,MAIK;AACDW,MAAAA,SAAS,GAAGX,GAAZ;AACAY,MAAAA,OAAO,GAAGX,IAAV;AACH;;AACD,QAAIK,IAAI,CAACC,GAAL,CAASP,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAjC,EAAoC;AAChCY,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH,KAHD,MAIK;AACDE,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH;;AAED,SAAK,IAAIG,CAAC,GAAGH,SAAb,EAAwBG,CAAC,GAAGF,OAA5B,EAAqCE,CAAC,IAAID,WAA1C,EAAuD;AACnDH,MAAAA,IAAI,CAACK,IAAL,CAAUD,CAAV;AACH;;AACD,WAAOJ,IAAP;AACH;;AA5CmC","sourcesContent":["import Piece from './piece.js';\n\nexport default class Rook extends Piece {\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n    }\n\n    isMovePossible(src, dest) {\n        let mod = src % 8;\n        let diff = 8 - mod;\n        console.log(\"src: \", src)\n        console.log(\"dest: \", dest)\n        console.log(\"mod: \", mod)\n        console.log(\"diff: \", diff)\n        console.log((Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff))))\n        \n        return (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\n    }\n\n    possibleMoves() {\n        return [1, 2]\n    }\n\n    getSrcToDestPath(src, dest) {\n        let path = [], pathStart, pathEnd, incrementBy;\n        if (src > dest) {\n            pathStart = dest;\n            pathEnd = src;\n        }\n        else {\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if (Math.abs(src - dest) % 8 === 0) {\n            incrementBy = 8;\n            pathStart += 8;\n        }\n        else {\n            incrementBy = 1;\n            pathStart += 1;\n        }\n\n        for (let i = pathStart; i < pathEnd; i += incrementBy) {\n            path.push(i);\n        }\n        return path;\n    }\n}"]},"metadata":{},"sourceType":"module"}