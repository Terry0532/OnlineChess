{"ast":null,"code":"import Bishop from '../pieces/bishop.js';\nimport King from '../pieces/king.js';\nimport Knight from '../pieces/knight.js';\nimport Pawn from '../pieces/pawn.js';\nimport Queen from '../pieces/queen.js';\nimport Rook from '../pieces/rook.js';\nexport default function initialiseChessBoard() {\n  const squares = Array(64).fill(null); // for (let i = 8; i < 16; i++) {\n  //     squares[i] = new Pawn(2);\n  //     squares[i + 40] = new Pawn(1);\n  // }\n  // squares[0] = new Rook(2);\n  // squares[7] = new Rook(2);\n  // squares[56] = new Rook(1);\n  // squares[63] = new Rook(1);\n  // squares[1] = new Knight(2);\n  // squares[6] = new Knight(2);\n  // squares[57] = new Knight(1);\n  // squares[62] = new Knight(1);\n  // squares[2] = new Bishop(2);\n  // squares[5] = new Bishop(2);\n  // squares[58] = new Bishop(1);\n  // squares[61] = new Bishop(1);\n  // squares[3] = new Queen(2);\n  // squares[4] = new King(2);\n  // squares[59] = new Queen(1);\n  // squares[60] = new King(1);\n\n  squares[20] = new King(1);\n  squares[21] = new Pawn(2); // squares[11] = new Pawn(1);\n\n  squares[2] = new King(2);\n  squares[10] = new Pawn(1); // squares[54] = new Rook(2);\n  // squares[61] = new Rook(2);\n  // squares[35] = new Queen(2);\n  // squares[61] = new Bishop(1);\n  // squares[50] = new Bishop(2);\n\n  return squares;\n}","map":{"version":3,"sources":["/Users/terry/UUBC/React/Chess/src/helpers/initialiseChessBoard.js"],"names":["Bishop","King","Knight","Pawn","Queen","Rook","initialiseChessBoard","squares","Array","fill"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAC3C,QAAMC,OAAO,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CAAhB,CAD2C,CAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEAF,EAAAA,OAAO,CAAC,EAAD,CAAP,GAAc,IAAIN,IAAJ,CAAS,CAAT,CAAd;AACAM,EAAAA,OAAO,CAAC,EAAD,CAAP,GAAc,IAAIJ,IAAJ,CAAS,CAAT,CAAd,CA7B2C,CA8B3C;;AACAI,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAIN,IAAJ,CAAS,CAAT,CAAb;AACAM,EAAAA,OAAO,CAAC,EAAD,CAAP,GAAc,IAAIJ,IAAJ,CAAS,CAAT,CAAd,CAhC2C,CAiC3C;AACA;AACA;AACA;AACA;;AAEA,SAAOI,OAAP;AACH","sourcesContent":["import Bishop from '../pieces/bishop.js';\nimport King from '../pieces/king.js';\nimport Knight from '../pieces/knight.js';\nimport Pawn from '../pieces/pawn.js';\nimport Queen from '../pieces/queen.js';\nimport Rook from '../pieces/rook.js';\n\nexport default function initialiseChessBoard() {\n    const squares = Array(64).fill(null);\n\n    // for (let i = 8; i < 16; i++) {\n    //     squares[i] = new Pawn(2);\n    //     squares[i + 40] = new Pawn(1);\n    // }\n    // squares[0] = new Rook(2);\n    // squares[7] = new Rook(2);\n    // squares[56] = new Rook(1);\n    // squares[63] = new Rook(1);\n\n    // squares[1] = new Knight(2);\n    // squares[6] = new Knight(2);\n    // squares[57] = new Knight(1);\n    // squares[62] = new Knight(1);\n\n    // squares[2] = new Bishop(2);\n    // squares[5] = new Bishop(2);\n    // squares[58] = new Bishop(1);\n    // squares[61] = new Bishop(1);\n    \n    // squares[3] = new Queen(2);\n    // squares[4] = new King(2);\n    \n    // squares[59] = new Queen(1);\n    // squares[60] = new King(1);\n    \n    squares[20] = new King(1);\n    squares[21] = new Pawn(2);\n    // squares[11] = new Pawn(1);\n    squares[2] = new King(2);\n    squares[10] = new Pawn(1);\n    // squares[54] = new Rook(2);\n    // squares[61] = new Rook(2);\n    // squares[35] = new Queen(2);\n    // squares[61] = new Bishop(1);\n    // squares[50] = new Bishop(2);\n\n    return squares;\n}"]},"metadata":{},"sourceType":"module"}